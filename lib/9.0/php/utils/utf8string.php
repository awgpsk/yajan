<?phpclass UTF8String{	var $string;	var $unicode;	var $chanakya; 	var $asci;	var $matra;	var $firstHaph;	var $joinCharDefination;	function UTF8String($str="")	{		$this->string = $str;		$this->matra = "ािीुूृेैोौं:ँॅ्";		$this->asci = array("`","1","2","3","4","5","6","7","8","9","0","-","=","\\",		"~","!","@","#","$","%","^","&","*","(",")","_","+","|",		"\t","q","w","e","r","t","y","u","i","o","p","[","]",		"","Q","W","E","R","T","Y","I","O","P","{","}",		"a","s","d","f","g","h","j","k","l",";","'",		"A","S","F","G","H","J","K","L",":","\"",		"z","x","c","v","b","n","m",",",".","/","\n","\r",		"Z","X","C","V","B","N","M","<",">","?",		" "); 		$this->firstHaph = array("क्","ष्","श्","ढ्","छ्","ह्","ञ्","ङ्","ट्","ड्","द्","ठ्","त्","ल्","ष्ट्");		$this->unicode = array(		' ',"ज़्","फ़्","क़","ख़","ग़","ज़","ड़","ढ़","फ़","य़","ऱ","ऩ",    // two-byte nukta varNas		"‘","’","“","”","–","ं","ऑ",		"त्र्","श्र्",		"क्र","ग्र","घ्र",		"छ्र","ट्र","ड्र","ढ्र",		"त्र","द्र","ध्र",		"प्र","फ्र","ब्र","भ्र","म्र",		"व्र","श्र","स्र","ह्र",		"ष्ट्र", "रु","रू",		"क्ष्","क्ष","ज्ञ","् ","्,","्;",							 		"क़","ख़","ग़","ज़्","ज़","ड़","ढ़","फ़्","फ़","य़","ऱ","ऩ",      // one-byte nukta varNas		"क्च","ष्ट","ष्ठ","श्व","॥","ढ्ढ","छ्व", //"स्न", creates problem in कार्त्स्न्य		"हृ","क्क","क्त","ञ्ज","ङ्क","ङ्ख","ङ्ग","ङ्घ","ट्ट","ट्ठ",		"क्व","ड्ड","ड्ढ","द्ग","द्घ","द्द","द्ध","द्ब","द्भ","द्म","द्य","द्व","ठ्ठ","श्च","ह्न","ह्म","ह्म्","ह्य","ह्ल","ह्व",		 		"त्त","त्त्","प्त","ञ्च",  //"त्न",		"ल्ल","ष्ट्व","ङ्क्ष",  //"ख्न","द्ब्र","ख्र",		"ह्न","ह्व","द्द",  		"।","्र",		"शृ","शॄ","कॢ","ह्ण",		"ओ","औ","आ","अ","ईं","ई","इ","उ","ऊ","ऋ","ॠ","ऌ","ऐ","ए",		"के","कै","फे","फै",  //"कं","फं",		"क्","क", "ख्","ख","ग्","ग","घ्","घ","ङ",		"च्च्","च्","च","छ","ज्ज्","ज्","ज","झ्","झ","ञ्","ञ",		"ट्","ट","ठ्","ठ","ड्","ड","ढ्","ढ","ण्","ण",		"त्","त","थ्","थ","द","ध्","ध","न्न्","न्न","न्","न",		"प्","प","फ्","फ","ब्","ब","भ्","भ","म्","म",		"य्","य","र","ल्","ल","ळ","व्","व",		"श्","श","ष्","ष","स्","स","ह्","ह",		"्य","x",		"ॉ","ा","ी","ु","ू","ृ","ॄ","ॢ","े","ै","ो","ौ",		"ं","ं","ँ","ः","़", "ॅ","ऽ","्",		"०","१","२","३","४","५","६","७","८","९",		"0","1","2","3","4","5","6","7","8","9",		"ॐ");								$this->joinCharDefination = array();		$this->joinCharDefination[0]=array("क्","च");		$this->joinCharDefination[1]=array("ष्","ट");		$this->joinCharDefination[2]=array("ष्","ठ");		$this->joinCharDefination[3]=array("श्","व");		$this->joinCharDefination[4]=array("ढ्","ढ");		$this->joinCharDefination[5]=array("छ्","व");		$this->joinCharDefination[6]=array("ह्","ृ");		$this->joinCharDefination[7]=array("क्","क");		$this->joinCharDefination[8]=array("क्","त");		$this->joinCharDefination[9]=array("ञ्","ज");		$this->joinCharDefination[10]=array("ङ्","क");		$this->joinCharDefination[11]=array("ङ्","ख");		$this->joinCharDefination[12]=array("ङ्","ग");		$this->joinCharDefination[13]=array("ङ्","घ");		$this->joinCharDefination[14]=array("ट्","ट");		$this->joinCharDefination[15]=array("ट्","ठ");		$this->joinCharDefination[16]=array("क्","व");		$this->joinCharDefination[17]=array("ड्","ड");		$this->joinCharDefination[18]=array("ड्","ढ");		$this->joinCharDefination[19]=array("द्","ग");		$this->joinCharDefination[20]=array("द्","घ");		$this->joinCharDefination[21]=array("द्","द");		$this->joinCharDefination[22]=array("द्","ध");		$this->joinCharDefination[23]=array("द्","ब");		$this->joinCharDefination[24]=array("द्","भ");		$this->joinCharDefination[25]=array("द्","म");		$this->joinCharDefination[26]=array("द्","य");		$this->joinCharDefination[27]=array("द्","व");		$this->joinCharDefination[28]=array("ठ्","ठ");		$this->joinCharDefination[29]=array("श्","च");		$this->joinCharDefination[30]=array("ह्","न");		$this->joinCharDefination[31]=array("ह्","म");		$this->joinCharDefination[32]=array("ह्","म्");		$this->joinCharDefination[33]=array("ह्","य");		$this->joinCharDefination[34]=array("ह्","ल");		$this->joinCharDefination[35]=array("ह्","व");		$this->joinCharDefination[36]=array("त्","त");		$this->joinCharDefination[37]=array("त्","त्");		$this->joinCharDefination[38]=array("प्","त");		$this->joinCharDefination[39]=array("ञ्","च");		$this->joinCharDefination[40]=array("ल्","ल");		$this->joinCharDefination[41]=array("ष्ट्","व");		$this->joinCharDefination[42]=array("ङ्","क्ष");		$this->joinCharDefination[43]=array("क्","ष");//		$this->joinCharDefination[43]=array("प्","र");//		$this->joinCharDefination[43]=array("क्","र");			}	private function validJoint($c1 ,$c2)	{		for($i=0;$i<count($this->joinCharDefination);$i++)		{			if($this->joinCharDefination[$i][0]==$c1 && $this->joinCharDefination[$i][1]==$c2)			{				return true;			}		}		return false;	}	private function findPosition($k1,$k2,$arr,$p=0,$dir=true)	{		$c=0;		$i=0;		$p++;		$t=count($arr);		if($dir==true)		{			$t = count($arr)-1;		}		else		{			$i=1;		}		for($i;$i<$t;$i++)		{			if($dir==true)			{				if($k1==$arr[$i] && $k2==$arr[$i+1])				{					$c++;				}			}			else			{				if($k1==$arr[$i] && $k2==$arr[$i-1])				{					$c++;				}			}						//echo "$i..$c..$p<br>";			if($c==$p)			{				return $i;			}		}	}	private function uniArray()	{		$inx = 0;		$temp = array();		for($i=0;$i<strlen($this->string);$i++)		{			$ch = $this->string[$i];			if( in_array($ch,$this->asci)==true)			{				$temp[$inx]=$ch;				$inx++;			}			else			{				$temp[$inx] = join("",array($this->string[$i],$this->string[$i+1],$this->string[$i+2]));				$inx++;				$i=$i+2;			}		}		return $temp;	}	private function removeNull($arr)	{		$temp = array();		$a=0;		for($i=0;$i<count($arr);$i++)		{			if($arr[$i]!="")			{				$temp[$a]=$arr[$i];				$a++;			}		}		return $temp;	}	function toChanakya($text="")	{		if($text!="")		{			$this->string = $text;		}		$echo = false;		$r = $this->uniArray();		if($echo)		{		echo "Row Input<br>";		print_r($r);		print("<br><br>");		}		$position_of_f = array_search("ि",$r);					while($position_of_f>-1 && $position_of_f-1 >= 0)		{			$ch = $r[$position_of_f-1];			$r[$position_of_f-1]="ç";			$r[$position_of_f]=$ch;			$position_of_f = $position_of_f -1;						while($r[$position_of_f-1]=="्" && $position_of_f!=0)			{				$s1 = $r[$position_of_f-1];				$s2 = $r[$position_of_f-2];				$r[$position_of_f-2]=$r[$position_of_f];				$r[$position_of_f-1]=$s2;				$r[$position_of_f]=$s1;				$position_of_f = $position_of_f-2;			}						$position_of_f = array_search("ि",$r);			//$position_of_f = strpos($str,"ि");					}		if($echo)		{			echo "F Prcessed : <br>";			print_r($r);			print("<br><br>");		}				$rPos=0;		$k=0;		$countP = 0;		$i=$this->findPosition("्","र",$r,$countP,false);		$r = $this->removeNull($r);		while($i!=false)		{						if($r[$i]=="्" && $r[$i-1]=="र")			{				//echo $i."<br>";				$ch1 = $r[$i-1];				$ch2 = $r[$i];				$ch = $r[$i+1];				$nch = $r[$i+2];								if($ch!=" ")				{					$rPos = $i+1;					if($nch=="्")					{						$rPos=$rPos+2;						$ch=$r[$i+3];					}					while(strpos($ch,$this->matra)!==false)					{						$rPos++;					}				}				else				{					$rPos = $i+1;				}												for($k=$i;$k<$rPos;$k++)				{					$r[$k-1]=$r[$k+1];				}								$r[$rPos-1]="ü";				$r[$rPos]="";				$i = $i+$rPos;			}			//$countP++;			$i=$this->findPosition("्","र",$r,$countP,false);		}		if($echo)		{			echo "f and z processed : <br>";			print_r($r);			echo "<br><br>";		}		$i=array_search("्",$r);		while($i!=false)		{			//print_r($r);			//echo "<br>";			if($r[$i]=="्") 			{				if($r[$i+1]!=" ")				{					$r[$i-1].=$r[$i];					$r[$i]=$r[$i+1];					$r[$i+1]="";										/*					if(in_array($r[$i-1],$this->firstHaph)==true)					*/					if($r[$i]=="र")					{						$r[$i-1].=$r[$i];						$r[$i]="";						$r[$i+1]="";					}					else if($this->validJoint($r[$i-1],$r[$i]) )					{												$r[$i-1].=$r[$i];						$r[$i]="";						$r[$i+1]="";					}				}				else				{					$r[$i] = "÷";				}				$i=array_search("्",$r);			}								}		if($echo)		{			echo "Char jointing:<br>";			print_r($r);			echo "<br><br>";		}				$c1Status = false;		$c2Status = false;		for($i=0;$i<count($r);$i++)		{			$p = array_search($r[$i],$this->unicode);			if($p!=null)			{				$r[$i]=$this->chanakya[$p];			}			else if($r[$i]=="'")			{				if($c1Status==false)				{					$c1Status=true;					$r[$i]="Ó";				}				else				{					$c1Status=false;					$r[$i]="Ò";				}			}			else if($r[$i]=="\"")			{				if($c2Status==false)				{					$c2Status=true;					$r[$i]="ÓÓ";				}				else				{					$c2Status=false;					$r[$i]="ÒÒ";				}			}		}		if($echo)		{			echo "Output : <br>";			print_r($r);			echo "<br><br>";		}		$str = join("",$r);		$str = str_replace("üè","èü",$str);		$str = str_replace("üô","ôü",$str);		$str = str_replace("üæ","æü",$str);		$str = str_replace("ü´","Z",$str);		$str = str_replace("÷ ü","÷ü",$str);		$str = str_replace("Çç","çÇ",$str);		$str = str_replace("Éç","çÉ",$str);		$str = str_replace("È¤ç","çÈ¸¤",$str);		$str = str_replace("ÚUé","L¤",$str);		$str = str_replace("ÚUê","M¤",$str);		$str = str_replace("¤é","é¤",$str);		$str = str_replace("¤ê","ê¤",$str);		$str = str_replace("¤ü","ü¤",$str);		$str = str_replace("¤ð","ð¤",$str);		$str = str_replace("¤ñ","ñ¤",$str);		$str = str_replace("ˆ ","Ì÷ ",$str);		$str = str_replace("’†","™",$str);		$str = str_replace("ž","}",$str);		return $str;			}	function toEnglish($text="")	{		if($text!="")		{			$this->string = $text;		}		$unicode = array(		" ","ज़्","फ़्","क़","ख़","ग़","ज़","ड़","ढ़","फ़","य़","ऱ","ऩ",    // two-byte nukta varNas		"‘","’","“","”","–","ं","ऑ",",",		"त्र्","श्र्",		"क्र","ग्र","घ्र",		"छ्र","ट्र","ड्र","ढ्र",		"त्र","द्र","ध्र",		"प्र","फ्र","ब्र","भ्र","म्र",		"व्र","श्र","स्र","ह्र",		"ष्ट्र", "रु","रू",		"क्ष्","क्ष","ज्ञ","् ","्,","्;",							 		"क़","ख़","ग़","ज़्","ज़","ड़","ढ़","फ़्","फ़","य़","ऱ","ऩ",      // one-byte nukta varNas		"क्च","ष्ट","ष्ठ","श्व","॥","ढ्ढ","छ्व", //"स्न", creates problem in कार्त्स्न्य		"हृ","क्क","क्त","ञ्ज","ङ्क","ङ्ख","ङ्ग","ङ्घ","ट्ट","ट्ठ",		"क्व","ड्ड","ड्ढ","द्ग","द्घ","द्द","द्ध","द्ब","द्भ","द्म","द्य","द्व","ठ्ठ","श्च","ह्न","ह्म","ह्म्","ह्य","ह्ल","ह्व","दृ",		 		"त्त","त्त्","प्त","ञ्च",  //"त्न",		"ल्ल","ष्ट्व","ङ्क्ष",  //"ख्न","द्ब्र","ख्र",		"ह्न","ह्व","द्द",  		"।","्र",		"शृ","शॄ","कॢ","ह्ण",		"ओ","औ","आ","अ","ईं","ई","इ","उ","ऊ","ऋ","ॠ","ऌ","ऐ","ए",		"के","कै","फे","फै",  //"कं","फं",		"क्","क", "ख्","ख","ग्","ग","घ्","घ","ङ",		"च्च्","च्","च","छ","ज्ज्","ज्","ज","झ्","झ","ञ्","ञ",		"ट्","ट","ठ्","ठ","ड्","ड","ढ्","ढ","ण्","ण",		"त्","त","थ्","थ","द","ध्","ध","न्न्","न्न","न्","न",		"प्","प","फ्","फ","ब्","ब","भ्","भ","म्","म",		"य्","य","र","ल्","ल","ळ","व्","व",		"श्","श","ष्","ष","स्","स","ह्","ह",		"्य","x",		"ॉ","ा",'ि',"ी","ु","ू","ृ","ॄ","ॢ","े","ै","ो","ौ",		"ं","ं","ँ","ः","़", "ॅ","ऽ","्",		"०","१","२","३","४","५","६","७","८","९",		"0","1","2","3","4","5","6","7","8","9",		"ॐ",		"`","1","2","3","4","5","6","7","8","9","0","-","=","\\",		"~","!","@","#","$","%","^","&","*","(",")","_","+","|",		"\t","q","w","e","r","t","y","u","i","o","p","[","]",		"","Q","W","E","R","T","Y","I","O","P","{","}",		"a","s","d","f","g","h","j","k","l",";","'",		"A","S","F","G","H","J","K","L",":","\"",		"z","x","c","v","b","n","m",",",".","/","\n","\r",		"Z","X","C","V","B","N","M","<",">","?",		" ");										$english = array(		" ","j","f","k","kh","g","j","d","dh","f","y","r","n",    // two-byte nukta varNas		"‘","’","“","”","–","n","aao",',',		"tr","shr",		"kr","gr","ghr",		"chhr","tra","dra","dhra",		"tra","dra","dhra",		"pra","fra","bra","bhra","mra",		"vra","shra","sra","hra",		"shtra", "ru","roo",		"ksh","ksha","gya"," "," ,"," ;",							 		"k","kh","g","j","ja","da","dha","f","fa","ya","ra","na",      // one-byte nukta varNas		"kcha","shta","shtha","shwa",".","dhdha","chhwa", //"स्न", creates problem in कार्त्स्न्य		"hrri","kka","kta","nja","nka","nkha","nga","ngha","tta","ttha",		"kwa","dda","ddha","dga","dgha","dda","ddha","dba","dbha","dma","dya","dwa","ththa","shcha","hna","hma","hm","hya","hla","hwa","dri",		 		"tta","tt","pta","nch",  //"त्न",		"lla","shtwa","nksha",  //"ख्न","द्ब्र","ख्र",		"hna","hwa","dda",  		".","r",		"shri","shrri","klri","hna",		"o","au","aa","a","een","ee","i","u","u","ri","rri","lri","ai","e",		"ke","kai","fe","fai",  //"कं","फं",		"k","ka", "kh","kha","g","ga","gh","gha","ng",		"chch","ch","cha","chha","jja","j","ja","jh","jha","n","na",		"t","ta","th","tha","d","da","dh","dha","n","na",		"t","ta","th","tha","da","dh","dha","nn","nna","n","na",		"p","pa","f","fa","b","ba","bh","bha","m","ma",		"y","ya","ra","l","la","la","v","va",		"sh","sha","sh","sha","s","sa","h","ha",		"्य","x",		"-ao","-aa","-ai","-aee","-au","-aoo","-ari","-arri","-alri","-ae","-aai","-ao","-aau",		"n","n","n","h","", "ao","a","-a",		"0","1","2","3","4","5","6","7","8","9",		"0","1","2","3","4","5","6","7","8","9",		"aum",		"`","1","2","3","4","5","6","7","8","9","0","-","=","\\",		"~","!","@","#","$","%","^","&","*","(",")","_","+","|",		"\t","q","w","e","r","t","y","u","i","o","p","[","]",		"","Q","W","E","R","T","Y","I","O","P","{","}",		"a","s","d","f","g","h","j","k","l",";","'",		"A","S","F","G","H","J","K","L",":","\"",		"z","x","c","v","b","n","m",",",".","/","\n","\r",		"Z","X","C","V","B","N","M","<",">","?",		" ");				$r = $this->uniArray();		$str = array();		$terminator = array(" ",",");		for($i=0;$i<count($r);$i++)		{						$ch = $r[$i];			$p = array_search($ch,$unicode);			$c = $english[$p];						if(strpos($c,"-")!==false)			{				$px = count($str)-1;				$cx = $str[$px];				$cx = substr($cx,0,strlen($cx)-1);				$str[$px]=$cx;				$c=str_replace("-a","",$c);							}			/**/			$px = count($str)-1;			if($px>-1)			$cx = $str[$px];						if(array_search($c,$terminator)!==false 			&&  array_search($cx,$terminator)===false			&& $r[$i-1]!='ा')			{				//echo $cx[strlen($cx)-1]."<br>";				if($cx[strlen($cx)-1]=="a")				{										$cx = substr($cx,0,strlen($cx)-1);					$str[$px]=$cx;				}			}			/**/			$str[count($str)]=$c;					}		$ec = $str[count($str)-1];		if(strlen($ec)>0)		{			if($r[count($r)-1]!='ा' && $ec[strlen($ec)-1]=="a")			{				//$str[count($str)]="";				$ec = substr($ec,0,strlen($ec)-1);				$str[count($str)-1] = $ec;			}		}		return join("",$str);	}}?>